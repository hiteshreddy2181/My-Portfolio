import { __awaiter } from "tslib";
import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "./ngx-typewriter.service";
import * as i2 from "./style.service";
export class NgxTypewriterComponent {
    constructor(tpWriterService, styleService) {
        this.tpWriterService = tpWriterService;
        this.styleService = styleService;
        this.selector = 'tpw';
        this.marker = '|';
        NgxTypewriterComponent.styleService = this.styleService;
    }
    ngOnInit() {
        return __awaiter(this, void 0, void 0, function* () {
            this.tpw = this.tpWriterService.getTPW(this.selector, this.options);
            for (const className of Object.keys(this.tpw.classList)) {
                this.styleService.setStyles(`.${className}`, this.tpw.classList[className]);
            }
            yield this.tpw.runDisplay();
        });
    }
}
NgxTypewriterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: NgxTypewriterComponent, deps: [{ token: i1.NgxTypewriterService }, { token: i2.StyleService }], target: i0.ɵɵFactoryTarget.Component });
NgxTypewriterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: NgxTypewriterComponent, selector: "tp-writer", inputs: { options: "options", selector: "selector", marker: "marker" }, ngImport: i0, template: `
    <span [style.color]="tpw.color ? tpw.color : null" [innerHTML]="tpw.displayText"></span>
    <span class="marker">{{marker}}</span>
  `, isInline: true, styles: [".marker { animation: 0.5s ease 0s infinite normal none running blink; } @keyframes blink {from {opacity: 0;} to {opacity: 1;}}"] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: NgxTypewriterComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tp-writer',
                    template: `
    <span [style.color]="tpw.color ? tpw.color : null" [innerHTML]="tpw.displayText"></span>
    <span class="marker">{{marker}}</span>
  `,
                    styles: ['.marker { animation: 0.5s ease 0s infinite normal none running blink; } @keyframes blink {from {opacity: 0;} to {opacity: 1;}}']
                }]
        }], ctorParameters: function () { return [{ type: i1.NgxTypewriterService }, { type: i2.StyleService }]; }, propDecorators: { options: [{
                type: Input
            }], selector: [{
                type: Input
            }], marker: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXR5cGV3cml0ZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LXR5cGV3cml0ZXIvc3JjL2xpYi9uZ3gtdHlwZXdyaXRlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsS0FBSyxFQUFTLE1BQU0sZUFBZSxDQUFDOzs7O0FBY3ZELE1BQU0sT0FBTyxzQkFBc0I7SUFPakMsWUFBb0IsZUFBcUMsRUFBVSxZQUEwQjtRQUF6RSxvQkFBZSxHQUFmLGVBQWUsQ0FBc0I7UUFBVSxpQkFBWSxHQUFaLFlBQVksQ0FBYztRQUo3RSxhQUFRLEdBQUcsS0FBSyxDQUFDO1FBQ3hCLFdBQU0sR0FBRyxHQUFHLENBQUM7UUFJcEIsc0JBQXNCLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUM7SUFDMUQsQ0FBQztJQUVLLFFBQVE7O1lBQ1osSUFBSSxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztZQUNwRSxLQUFLLE1BQU0sU0FBUyxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsRUFBRTtnQkFDdkQsSUFBSSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsSUFBSSxTQUFTLEVBQUUsRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDO2FBQzdFO1lBQ0QsTUFBTSxJQUFJLENBQUMsR0FBRyxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQzlCLENBQUM7S0FBQTs7bUhBakJVLHNCQUFzQjt1R0FBdEIsc0JBQXNCLHlIQVB2Qjs7O0dBR1Q7MkZBSVUsc0JBQXNCO2tCQVRsQyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxXQUFXO29CQUNyQixRQUFRLEVBQUU7OztHQUdUO29CQUNELE1BQU0sRUFBRSxDQUFDLGdJQUFnSSxDQUFDO2lCQUMzSTtzSUFJaUIsT0FBTztzQkFBdEIsS0FBSztnQkFDVSxRQUFRO3NCQUF2QixLQUFLO2dCQUNHLE1BQU07c0JBQWQsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBJbnB1dCwgT25Jbml0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7U3R5bGVTZXJ2aWNlfSBmcm9tIFwiLi9zdHlsZS5zZXJ2aWNlXCI7XG5pbXBvcnQge1RQVywgVFBXSW50ZXJmYWNlfSBmcm9tIFwiLi4vbW9kZWxzL1RQVy5tb2RlbFwiO1xuaW1wb3J0IHtOZ3hUeXBld3JpdGVyU2VydmljZX0gZnJvbSBcIi4vbmd4LXR5cGV3cml0ZXIuc2VydmljZVwiO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0cC13cml0ZXInLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxzcGFuIFtzdHlsZS5jb2xvcl09XCJ0cHcuY29sb3IgPyB0cHcuY29sb3IgOiBudWxsXCIgW2lubmVySFRNTF09XCJ0cHcuZGlzcGxheVRleHRcIj48L3NwYW4+XG4gICAgPHNwYW4gY2xhc3M9XCJtYXJrZXJcIj57e21hcmtlcn19PC9zcGFuPlxuICBgLFxuICBzdHlsZXM6IFsnLm1hcmtlciB7IGFuaW1hdGlvbjogMC41cyBlYXNlIDBzIGluZmluaXRlIG5vcm1hbCBub25lIHJ1bm5pbmcgYmxpbms7IH0gQGtleWZyYW1lcyBibGluayB7ZnJvbSB7b3BhY2l0eTogMDt9IHRvIHtvcGFjaXR5OiAxO319J11cbn0pXG5cbmV4cG9ydCBjbGFzcyBOZ3hUeXBld3JpdGVyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICBASW5wdXQoKSBwdWJsaWMgb3B0aW9ucyE6IFRQV0ludGVyZmFjZTtcbiAgQElucHV0KCkgcHVibGljIHNlbGVjdG9yID0gJ3Rwdyc7XG4gIEBJbnB1dCgpIG1hcmtlciA9ICd8JztcbiAgcHVibGljIHRwdyE6IFRQVztcbiAgc3RhdGljIHN0eWxlU2VydmljZTogU3R5bGVTZXJ2aWNlO1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHRwV3JpdGVyU2VydmljZTogTmd4VHlwZXdyaXRlclNlcnZpY2UsIHByaXZhdGUgc3R5bGVTZXJ2aWNlOiBTdHlsZVNlcnZpY2UpIHtcbiAgICBOZ3hUeXBld3JpdGVyQ29tcG9uZW50LnN0eWxlU2VydmljZSA9IHRoaXMuc3R5bGVTZXJ2aWNlO1xuICB9XG5cbiAgYXN5bmMgbmdPbkluaXQoKSB7XG4gICAgdGhpcy50cHcgPSB0aGlzLnRwV3JpdGVyU2VydmljZS5nZXRUUFcodGhpcy5zZWxlY3RvciwgdGhpcy5vcHRpb25zKTtcbiAgICBmb3IgKGNvbnN0IGNsYXNzTmFtZSBvZiBPYmplY3Qua2V5cyh0aGlzLnRwdy5jbGFzc0xpc3QpKSB7XG4gICAgICB0aGlzLnN0eWxlU2VydmljZS5zZXRTdHlsZXMoYC4ke2NsYXNzTmFtZX1gLCB0aGlzLnRwdy5jbGFzc0xpc3RbY2xhc3NOYW1lXSk7XG4gICAgfVxuICAgIGF3YWl0IHRoaXMudHB3LnJ1bkRpc3BsYXkoKTtcbiAgfVxuXG59XG4iXX0=